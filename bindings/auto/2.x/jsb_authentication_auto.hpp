#pragma once
#include "base/ccConfig.h"

#include "cocos/scripting/js-bindings/jswrapper/SeApi.h"

extern se::Object* __jsb_authentication_AuthenticationController_proto;
extern se::Class* __jsb_authentication_AuthenticationController_class;

bool js_register_authentication_AuthenticationController(se::Object* obj);
bool register_all_authentication(se::Object* obj);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isReady);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_logOutApple);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isLoggedInGoogle);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_canSendEmail);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isGuestEnabled);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_SignInGoogle);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getUserPhotoUrl);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isAutoSignIn);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_tryInit);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_SignInFacebook);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isLoggedInAnonymous);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getUserDisplayName);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_SignInAnonymously);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isLoggedInFB);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_logOutFB);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getGoogleUserId);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_SignInOnLinkFail);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getFacebookAccessToken);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_fetchToken);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isAppleSignInSupported);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isLoggedInFBGaming);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_signOut);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_SignInApple);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getToken);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_canManuallySignin);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getUserInfo);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_logOutGoogle);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_OnGGFirebaseTokenReceived);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_isLoggedInApple);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_canLogOut);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getUserID);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getFacebookProfile);
SE_DECLARE_FUNC(js_authentication_AuthenticationController_getFacebookUserId);

extern se::Object* __jsb_authentication_PersistentAppData_proto;
extern se::Class* __jsb_authentication_PersistentAppData_class;

bool js_register_authentication_PersistentAppData(se::Object* obj);
bool register_all_authentication(se::Object* obj);
SE_DECLARE_FUNC(js_authentication_PersistentAppData_getData);
SE_DECLARE_FUNC(js_authentication_PersistentAppData_saveData);
SE_DECLARE_FUNC(js_authentication_PersistentAppData_getInstance);

